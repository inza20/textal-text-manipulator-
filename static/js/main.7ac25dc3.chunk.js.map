{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","typ","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalise","msg","Navbar","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","split","join","length","defaultProps","aboutText","App","setAlert","showAlert","message","setTimeout","_useState3","_useState4","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7ac25dc3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalise = (word)=>{           //func for capitalization\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (               //means if props.alert is true, do this\r\n        props.alert && <div className={`alert alert-${props.alert.typ}  alert-dismissible fade show`} role=\"alert\">\r\n\r\n            <strong>{capitalise(props.alert.typ)} : </strong>{props.alert.msg}     \r\n              \r\n\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} navbar-expand-lg bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                {props.home}\r\n              </a>\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n\r\n          </ul>\r\n        </div>   \r\n\r\n         <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>   \r\n\r\n      </div>\r\n    </nav>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, home: PropTypes.string };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title\",\r\n  home: \"Set  home pg\",\r\n  aboutText: \"About Us\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        // props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n\r\n    const handleDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        // props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        \r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        // props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)        \r\n        // to make the text area further editable in text area after converting to UpCase\r\n        // ie, to set the value of changed input as text so that it can be converted upon clicking the button\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <br/>\r\n            <h1>{props.heading} </h1>\r\n            <br/>\r\n\r\n            <div className=\"mb-3\">\r\n           \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"5\"></textarea>\r\n            <br/>\r\n\r\n            <div className='container'>\r\n\r\n            <span><button type=\"button\" onClick={handleUpClick} className=\"btn btn-primary\" > Convert to Upper case</button> </span>\r\n\r\n            <span>  <button type=\"button\" onClick={handleDownClick} className=\"btn btn-primary\" > Convert to Lower case</button> </span>\r\n\r\n            <span><button type=\"button\" onClick={handleClearClick} className=\"btn btn-primary\" > Clear Text</button> </span> \r\n\r\n            <span><button type=\"button\" onClick={handleExtraSpaces} className=\"btn btn-primary\" > Remove Extra Spaces</button></span>      \r\n                                \r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <hr/><br/>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read.</p>\r\n            <hr/>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in text box\"}</p>\r\n        </div>\r\n\r\n        </>        \r\n    )\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes, \n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  // Alert (Video 13) --------------------------------------\n\n  const [alert, setAlert] = useState(null); // state will be null by default, 'alert' -> object, 'setAlert' -> method\n\n  const showAlert = (message, type)=>{\n    setAlert({                              // by default alert was null, but using setAlert, it becomes an object right here\n      msg : message,\n      typ : type                        \n    })\n    setTimeout( () => {  //an event in setTimeout,to disappear alert\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  // Dark Mode -----------------------------------\n\n  const [mode, setMode] = useState('light'); // dark mode set as false by default\n\n  const toggleMode = ()=> { // creating this main function for switching b/w modes\n    if (mode==='light'){\n      setMode('dark');       // setMode is a function , not a variable like 'mode'\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode enabled\", \"success\");\n    }\n  }\n\n\n\n  return (\n    <>\n     \n\n{/* <Navbar title=\"TextUtils\" home=\"Home Pg\" aboutText=\"About Us\"/> */}\n\n    <Navbar title=\"Textal\" home=\"Home\" mode={mode} toggleMode={toggleMode} />\n\n      <Alert alert={alert}/>\n\n    <div className=\"container\"> \n\n    <TextForm heading=\"Enter the text to be analyzed\" mode={mode} />\n\n    </div>\n\n\n{/* <Router>\n\n    <Routes>\n          <Route path=\"/about\" element={<About />}></Route> \n          \n          < Route path=\"/\"\n            element= {<TextForm heading=\"Enter the text to analyse: \" mode={mode}/>}></Route> \n    </Routes>\n\n</Router> */}    \n\n    {/* <div className=\"container\"> \n            \n    </div> */}\n   \n       \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}